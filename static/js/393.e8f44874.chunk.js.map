{"version":3,"file":"static/js/393.e8f44874.chunk.js","mappings":"+KAAaA,EAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9B,OACI,0BACI,kBACIC,KAAK,OACLC,YAAY,wBACZF,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOL,MAAtB,EACXA,MAAOA,KAItB,E,mCCNYM,EAAY,WAAO,IAAD,EACrBC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAA8B,IAE/CC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAeC,KAAKR,EACvB,GAAE,IAEH,IAAMS,GAAmBC,EAAAA,EAAAA,UAAQ,WACjC,OAAOX,EAAUY,QAAO,SAAAC,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASX,EAAYU,cADnB,GAGjC,GAAE,CAACf,EAAWK,IAMb,OACI,6BACI,SAAChB,EAAD,CACAC,MAAOe,EACHd,SARS,SAAAD,GACrBc,EAA0B,KAAVd,EAAgB,CAAE2B,MAAO3B,GAAW,CAAC,EACtD,IAOUU,EAAUkB,OAAO,IAAM,wBACnBR,EAAiBS,KAAI,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAP,OAAkB,yBACpC,SAAC,KAAD,CAASO,GAAE,UAAKD,GAAME,MAAO,CAACC,KAAK1B,GAAnC,SACKiB,KAFwCM,EAA3B,OAM1B,uBAAIf,MAGf,C","sources":["components/SearchBox/SearchBox.jsx","pages/Customers/Customers.jsx"],"sourcesContent":["export const SearchBox = ({value, onChange }) => {\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Write searching query\"\n                onChange={e => onChange(e.target.value)}\n                value={value}\n            />\n        </div>\n    );\n};","import { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { getCustomers } from \"fakeApi\";\nimport { useEffect, useState, useMemo  } from \"react\";\nimport { NavLink, useLocation, useSearchParams} from \"react-router-dom\";\n\nexport const Customers = () => {\n    const location = useLocation();\n    const [customers, setCustomers] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const filterParam = searchParams.get('query')??'' ;\n\n    useEffect(() => {\n        getCustomers().then(setCustomers);\n    }, []);\n\n    const visibleCustomers = useMemo(() => {\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [customers, filterParam]);\n\n    const changeFilter = value => {\n    setSearchParams(value !== '' ? ({ query: value }) : {});\n  };\n\n    return (\n        <main>\n            <SearchBox\n            value={filterParam}\n                onChange={changeFilter} />\n            {customers.length>0 && (<ul>\n                {visibleCustomers.map(({ id, name }) => <li key={id}>\n                    <NavLink to={`${id}`} state={{from:location}}>\n                        {name}\n                    </NavLink>\n                </li>)}\n            </ul>)}\n            <p>{filterParam }</p>\n        </main>   \n    );\n};"],"names":["SearchBox","value","onChange","type","placeholder","e","target","Customers","location","useLocation","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","query","length","map","id","to","state","from"],"sourceRoot":""}